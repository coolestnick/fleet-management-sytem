service: () -> {
    createBooking: (record {vehicle_id:text; end_time:nat64; start_time:nat64; driver_id:text; to_location:text; from_location:text}) -> (variant {Ok:record {id:text; status:text; vehicle_id:text; created_at:nat64; end_time:nat64; start_time:nat64; driver_id:text; to_location:text; from_location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    createDriver: (record {license_number:text; name:text; contact_info:text}) -> (variant {Ok:record {id:text; license_number:text; owner:principal; name:text; created_at:nat64; contact_info:text; points:nat64}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    createRoute: (record {to_location:text; from_location:text}) -> (variant {Ok:record {id:text; optimized_route:text; distance:text; to_location:text; time_estimate:nat64; from_location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    createVehicle: (record {model:text; registration_number:text; capacity:nat64; location:text}) -> (variant {Ok:record {id:text; status:variant {Available; Maintenance; Booked}; model:text; registration_number:text; created_at:nat64; capacity:nat64; location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    getBookingByDriverId: (text) -> (variant {Ok:vec record {id:text; status:text; vehicle_id:text; created_at:nat64; end_time:nat64; start_time:nat64; driver_id:text; to_location:text; from_location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getBookingById: (text) -> (variant {Ok:record {id:text; status:text; vehicle_id:text; created_at:nat64; end_time:nat64; start_time:nat64; driver_id:text; to_location:text; from_location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getBookingByVehicleId: (text) -> (variant {Ok:vec record {id:text; status:text; vehicle_id:text; created_at:nat64; end_time:nat64; start_time:nat64; driver_id:text; to_location:text; from_location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getBookings: () -> (variant {Ok:vec record {id:text; status:text; vehicle_id:text; created_at:nat64; end_time:nat64; start_time:nat64; driver_id:text; to_location:text; from_location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getDriverById: (text) -> (variant {Ok:record {id:text; license_number:text; owner:principal; name:text; created_at:nat64; contact_info:text; points:nat64}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getDriverByPrincipal: () -> (variant {Ok:record {id:text; license_number:text; owner:principal; name:text; created_at:nat64; contact_info:text; points:nat64}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getDrivers: () -> (variant {Ok:vec record {id:text; license_number:text; owner:principal; name:text; created_at:nat64; contact_info:text; points:nat64}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getEmergencyAssistances: () -> (variant {Ok:vec record {id:text; status:text; vehicle_id:text; description:text; created_at:nat64; location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getFuelConsumptions: () -> (variant {Ok:vec record {id:text; vehicle_id:text; date:nat64; amount:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getMaintenances: () -> (variant {Ok:vec record {id:text; status:text; vehicle_id:text; description:text; created_at:nat64; scheduled_date:nat64}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getRouteById: (text) -> (variant {Ok:record {id:text; optimized_route:text; distance:text; to_location:text; time_estimate:nat64; from_location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getRoutes: () -> (variant {Ok:vec record {id:text; optimized_route:text; distance:text; to_location:text; time_estimate:nat64; from_location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getVehicleById: (text) -> (variant {Ok:record {id:text; status:variant {Available; Maintenance; Booked}; model:text; registration_number:text; created_at:nat64; capacity:nat64; location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getVehicleByModel: (text) -> (variant {Ok:vec record {id:text; status:variant {Available; Maintenance; Booked}; model:text; registration_number:text; created_at:nat64; capacity:nat64; location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getVehicleByRegistrationNumber: (text) -> (variant {Ok:record {id:text; status:variant {Available; Maintenance; Booked}; model:text; registration_number:text; created_at:nat64; capacity:nat64; location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    getVehicles: () -> (variant {Ok:vec record {id:text; status:variant {Available; Maintenance; Booked}; model:text; registration_number:text; created_at:nat64; capacity:nat64; location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}}) query;
    recordFuelConsumption: (record {vehicle_id:text; date:nat64; amount:text}) -> (variant {Ok:record {id:text; vehicle_id:text; date:nat64; amount:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    requestEmergencyAssistance: (record {vehicle_id:text; description:text; location:text}) -> (variant {Ok:record {id:text; status:text; vehicle_id:text; description:text; created_at:nat64; location:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
    scheduleMaintenance: (record {vehicle_id:text; description:text; scheduled_date:nat64}) -> (variant {Ok:record {id:text; status:text; vehicle_id:text; description:text; created_at:nat64; scheduled_date:nat64}; Err:variant {Error:text; InvalidPayload:text; NotFound:text; Success:text}});
}
